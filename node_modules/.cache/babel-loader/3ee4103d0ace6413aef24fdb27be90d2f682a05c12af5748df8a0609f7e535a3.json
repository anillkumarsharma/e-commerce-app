{"ast":null,"code":"import { ref, get, update, set, remove } from \"firebase/database\";\nimport { database } from \"../firebase\";\nexport const getData = path => {\n  return new Promise(resolve => {\n    get(ref(database, path)).then(snapshot => {\n      let data = snapshot.val();\n      resolve(data);\n    });\n  });\n};\nexport const saveData = (path, data) => {\n  return new Promise(resolve => {\n    update(ref(database, path), data);\n    resolve(\"success\");\n  });\n};\nexport const setData = (path, value) => {\n  return new Promise(resolve => {\n    set(ref(database, path), value);\n    resolve(\"success\");\n  });\n};\nexport const RemoveData = path => {\n  return new Promise(resolve => {\n    remove(ref(database, path));\n    resolve(\"success\");\n  });\n};\n_c = RemoveData;\nexport const getUserdata = () => {\n  return new Promise(resolve => {\n    let list = [];\n    getData(`DummyData`).then(response => {\n      let keyArray = Object.keys(response);\n      console.log(keyArray);\n      for (let i = 0; i < keyArray.length; i++) {\n        list.push({\n          name: re\n        });\n      }\n    });\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"RemoveData\");","map":{"version":3,"names":["ref","get","update","set","remove","database","getData","path","Promise","resolve","then","snapshot","data","val","saveData","setData","value","RemoveData","_c","getUserdata","list","response","keyArray","Object","keys","console","log","i","length","push","name","re","$RefreshReg$"],"sources":["D:/My_Tiffin_App/theTiffinApp/tiffin-wala/src/Services/dbService.js"],"sourcesContent":["import {ref,get,update,set,remove} from \"firebase/database\";\r\n  import { database} from \"../firebase\";\r\n\r\n  \r\n  export const getData = (path) => {\r\n    return new Promise((resolve) => {\r\n      get(ref(database, path)).then((snapshot) => {\r\n        let data = snapshot.val();\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n  \r\n  export const saveData = (path, data) => {\r\n    return new Promise((resolve) => {\r\n      update(ref(database, path), data);\r\n      resolve(\"success\");\r\n    });\r\n  };\r\n  \r\n  export const setData = (path, value) => {\r\n    return new Promise((resolve) => {\r\n      set(ref(database, path), value);\r\n      resolve(\"success\");\r\n    });\r\n  };\r\n  export const RemoveData = (path) => {\r\n    return new Promise((resolve) => {\r\n      remove(ref(database, path));\r\n      resolve(\"success\");\r\n    });\r\n  };\r\n  \r\n export const getUserdata =()=>{\r\n   return new Promise((resolve)=>{\r\n    let list =[]\r\n   getData(`DummyData`).then((response)=>{\r\n     let keyArray = Object.keys(response)\r\n     console.log(keyArray)\r\n      for(let i=0;i<keyArray.length;i++){\r\n         list.push({name :re})\r\n      }\r\n   })\r\n   })\r\n }\r\n \r\n "],"mappings":"AAAA,SAAQA,GAAG,EAACC,GAAG,EAACC,MAAM,EAACC,GAAG,EAACC,MAAM,QAAO,mBAAmB;AACzD,SAASC,QAAQ,QAAO,aAAa;AAGrC,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAK;EAC/B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BR,GAAG,CAACD,GAAG,CAACK,QAAQ,EAAEE,IAAI,CAAC,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;MAC1C,IAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MACzBJ,OAAO,CAACG,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,QAAQ,GAAGA,CAACP,IAAI,EAAEK,IAAI,KAAK;EACtC,OAAO,IAAIJ,OAAO,CAAEC,OAAO,IAAK;IAC9BP,MAAM,CAACF,GAAG,CAACK,QAAQ,EAAEE,IAAI,CAAC,EAAEK,IAAI,CAAC;IACjCH,OAAO,CAAC,SAAS,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,OAAO,GAAGA,CAACR,IAAI,EAAES,KAAK,KAAK;EACtC,OAAO,IAAIR,OAAO,CAAEC,OAAO,IAAK;IAC9BN,GAAG,CAACH,GAAG,CAACK,QAAQ,EAAEE,IAAI,CAAC,EAAES,KAAK,CAAC;IAC/BP,OAAO,CAAC,SAAS,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMQ,UAAU,GAAIV,IAAI,IAAK;EAClC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BL,MAAM,CAACJ,GAAG,CAACK,QAAQ,EAAEE,IAAI,CAAC,CAAC;IAC3BE,OAAO,CAAC,SAAS,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC;AAACS,EAAA,GALWD,UAAU;AAOxB,OAAO,MAAME,WAAW,GAAEA,CAAA,KAAI;EAC5B,OAAO,IAAIX,OAAO,CAAEC,OAAO,IAAG;IAC7B,IAAIW,IAAI,GAAE,EAAE;IACbd,OAAO,CAAC,WAAW,CAAC,CAACI,IAAI,CAAEW,QAAQ,IAAG;MACpC,IAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,QAAQ,CAAC;MACpCI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACpB,KAAI,IAAIK,CAAC,GAAC,CAAC,EAACA,CAAC,GAACL,QAAQ,CAACM,MAAM,EAACD,CAAC,EAAE,EAAC;QAC/BP,IAAI,CAACS,IAAI,CAAC;UAACC,IAAI,EAAEC;QAAE,CAAC,CAAC;MACxB;IACH,CAAC,CAAC;EACF,CAAC,CAAC;AACJ,CAAC;AAAA,IAAAb,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}