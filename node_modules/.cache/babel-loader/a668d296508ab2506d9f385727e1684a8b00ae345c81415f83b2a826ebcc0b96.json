{"ast":null,"code":"var _jsxFileName = \"D:\\\\My_Tiffin_App\\\\theTiffinApp\\\\tiffin-wala\\\\src\\\\Components\\\\Login\\\\login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './login.css'\n\n// const LoginComponent = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     ownerName: '',\n//     contactNumber: '',\n//     email: '',\n//     address: '',\n//     subscriptionType: '',\n//     description: '',\n//     deliveryAreas: [] // New field for selecting areas\n//   });\n\n//   const [areas, setAreas] = useState({\n//     Area1: false,\n//     Area2: false,\n//     Area3: false,\n//     Area4: false\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleAreaChange = (e) => {\n//     const { name, checked } = e.target;\n//     setAreas({ ...areas, [name]: checked });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const selectedAreas = Object.keys(areas).filter(area => areas[area]);\n//     const dataToSubmit = { ...formData, deliveryAreas: selectedAreas };\n\n//     console.log('Tiffin Center Data:', dataToSubmit);\n//     // Call your register function here to save to Firebase or backend\n//     // registerTiffinCenter(dataToSubmit, selectedAreas);\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//     <form onSubmit={handleSubmit} style={styles.form}>\n//       <h2>Login</h2>\n//       <div style={styles.inputContainer}>\n//         <label htmlFor=\"userName\">User Name:</label>\n//         <input\n//           type=\"text\"\n//           id=\"userName\"\n//           name=\"userName\"\n//           value={formData.userName}\n//           onChange={handleChange}\n//           style={styles.input}\n//           required\n//         />\n//       </div>\n//       <div style={styles.inputContainer}>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           style={styles.input}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\" style={styles.button}>\n//         Login\n//       </button>\n//       <div style={styles.signupOption}>\n//         <p>Don't have an account?</p>\n//         <a href=\"/signup\" style={styles.signupLink}>\n//           Sign Up\n//         </a>\n//       </div>\n//     </form>\n//   </div>\n\n//   );\n\n// };\n// const styles = {\n//   container: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     height: '100vh',\n//     backgroundColor: '#f0f0f0',\n//   },\n//   form: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '5px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   inputContainer: {\n//     marginBottom: '15px',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '8px',\n//     marginTop: '5px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//   },\n//   button: {\n//     width: '100%',\n//     padding: '10px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//   },\n//   signupOption: {\n//     marginTop: '15px',\n//     textAlign: 'center',\n//   },\n//   signupLink: {\n//     color: '#007bff',\n//     textDecoration: 'none',\n//   },\n// };\n\n// export default LoginComponent;\n\nimport React, { useState } from \"react\";\nimport { auth } from \"./firebaseConfig\";\nimport { RecaptchaVerifier, signInWithPhoneNumber, PhoneAuthProvider, signInWithCredential } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [verificationId, setVerificationId] = useState(null);\n\n  // Initialize RecaptchaVerifier\n  const setupRecaptcha = () => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      },\n      // Set to \"normal\" for visible reCAPTCHA\n      auth);\n    }\n  };\n\n  // Step 1: Send OTP\n  const sendOtp = () => {\n    setupRecaptcha(); // Initialize reCAPTCHA\n    const appVerifier = window.recaptchaVerifier;\n\n    // Ensure phone number is in the correct format, e.g., +1234567890\n    if (!phoneNumber.startsWith(\"+\")) {\n      alert(\"Please enter the phone number in international format (e.g., +1234567890)\");\n      return;\n    }\n    signInWithPhoneNumber(auth, phoneNumber, appVerifier).then(confirmationResult => {\n      setVerificationId(confirmationResult.verificationId);\n      alert(\"OTP sent successfully!\");\n      // Clear recaptchaVerifier instance\n      window.recaptchaVerifier.clear();\n    }).catch(error => {\n      console.error(\"Error sending OTP:\", error);\n      window.recaptchaVerifier.clear(); // Clear the reCAPTCHA instance on failure\n    });\n  };\n\n  // Step 2: Verify OTP\n  const verifyOtp = () => {\n    if (!verificationId) {\n      alert(\"Please request an OTP first.\");\n      return;\n    }\n    const credential = PhoneAuthProvider.credential(verificationId, otp);\n    signInWithCredential(auth, credential).then(result => {\n      alert(\"Phone number verified and user signed in successfully!\");\n      // Additional actions upon successful sign-in\n    }).catch(error => {\n      console.error(\"Error verifying OTP:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up with Phone Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      placeholder: \"Enter phone number in international format\",\n      value: phoneNumber,\n      onChange: e => setPhoneNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendOtp,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), verificationId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginComponent, \"8/L1YRW0kAHp7KujfvPCMg9j+sk=\");\n_c = LoginComponent;\nexport default LoginComponentLoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useState","auth","RecaptchaVerifier","signInWithPhoneNumber","PhoneAuthProvider","signInWithCredential","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginComponent","_s","phoneNumber","setPhoneNumber","otp","setOtp","verificationId","setVerificationId","setupRecaptcha","window","recaptchaVerifier","size","sendOtp","appVerifier","startsWith","alert","then","confirmationResult","clear","catch","error","console","verifyOtp","credential","result","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","id","_c","LoginComponentLoginComponent","$RefreshReg$"],"sources":["D:/My_Tiffin_App/theTiffinApp/tiffin-wala/src/Components/Login/login.jsx"],"sourcesContent":["\r\n\r\n// import React, { useState } from 'react';\r\n// import './login.css'\r\n\r\n// const LoginComponent = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     ownerName: '',\r\n//     contactNumber: '',\r\n//     email: '',\r\n//     address: '',\r\n//     subscriptionType: '',\r\n//     description: '',\r\n//     deliveryAreas: [] // New field for selecting areas\r\n//   });\r\n\r\n//   const [areas, setAreas] = useState({\r\n//     Area1: false,\r\n//     Area2: false,\r\n//     Area3: false,\r\n//     Area4: false\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleAreaChange = (e) => {\r\n//     const { name, checked } = e.target;\r\n//     setAreas({ ...areas, [name]: checked });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const selectedAreas = Object.keys(areas).filter(area => areas[area]);\r\n//     const dataToSubmit = { ...formData, deliveryAreas: selectedAreas };\r\n\r\n//     console.log('Tiffin Center Data:', dataToSubmit);\r\n//     // Call your register function here to save to Firebase or backend\r\n//     // registerTiffinCenter(dataToSubmit, selectedAreas);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//     <form onSubmit={handleSubmit} style={styles.form}>\r\n//       <h2>Login</h2>\r\n//       <div style={styles.inputContainer}>\r\n//         <label htmlFor=\"userName\">User Name:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"userName\"\r\n//           name=\"userName\"\r\n//           value={formData.userName}\r\n//           onChange={handleChange}\r\n//           style={styles.input}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div style={styles.inputContainer}>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           style={styles.input}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <button type=\"submit\" style={styles.button}>\r\n//         Login\r\n//       </button>\r\n//       <div style={styles.signupOption}>\r\n//         <p>Don't have an account?</p>\r\n//         <a href=\"/signup\" style={styles.signupLink}>\r\n//           Sign Up\r\n//         </a>\r\n//       </div>\r\n//     </form>\r\n//   </div>\r\n  \r\n\r\n//   );\r\n\r\n\r\n// };\r\n// const styles = {\r\n//   container: {\r\n//     display: 'flex',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     height: '100vh',\r\n//     backgroundColor: '#f0f0f0',\r\n//   },\r\n//   form: {\r\n//     backgroundColor: '#fff',\r\n//     padding: '20px',\r\n//     borderRadius: '5px',\r\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n//   },\r\n//   inputContainer: {\r\n//     marginBottom: '15px',\r\n//   },\r\n//   input: {\r\n//     width: '100%',\r\n//     padding: '8px',\r\n//     marginTop: '5px',\r\n//     borderRadius: '4px',\r\n//     border: '1px solid #ccc',\r\n//   },\r\n//   button: {\r\n//     width: '100%',\r\n//     padding: '10px',\r\n//     backgroundColor: '#007bff',\r\n//     color: '#fff',\r\n//     border: 'none',\r\n//     borderRadius: '4px',\r\n//     cursor: 'pointer',\r\n//   },\r\n//   signupOption: {\r\n//     marginTop: '15px',\r\n//     textAlign: 'center',\r\n//   },\r\n//   signupLink: {\r\n//     color: '#007bff',\r\n//     textDecoration: 'none',\r\n//   },\r\n// };\r\n\r\n// export default LoginComponent;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { auth } from \"./firebaseConfig\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber, PhoneAuthProvider, signInWithCredential } from \"firebase/auth\";\r\n\r\nconst LoginComponent = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [verificationId, setVerificationId] = useState(null);\r\n\r\n  // Initialize RecaptchaVerifier\r\n  const setupRecaptcha = () => {\r\n    if (!window.recaptchaVerifier) {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(\r\n        \"recaptcha-container\",\r\n        { size: \"invisible\" }, // Set to \"normal\" for visible reCAPTCHA\r\n        auth\r\n      );\r\n    }\r\n  };\r\n\r\n  // Step 1: Send OTP\r\n  const sendOtp = () => {\r\n    setupRecaptcha(); // Initialize reCAPTCHA\r\n    const appVerifier = window.recaptchaVerifier;\r\n\r\n    // Ensure phone number is in the correct format, e.g., +1234567890\r\n    if (!phoneNumber.startsWith(\"+\")) {\r\n      alert(\"Please enter the phone number in international format (e.g., +1234567890)\");\r\n      return;\r\n    }\r\n\r\n    signInWithPhoneNumber(auth, phoneNumber, appVerifier)\r\n      .then((confirmationResult) => {\r\n        setVerificationId(confirmationResult.verificationId);\r\n        alert(\"OTP sent successfully!\");\r\n        // Clear recaptchaVerifier instance\r\n        window.recaptchaVerifier.clear();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error sending OTP:\", error);\r\n        window.recaptchaVerifier.clear(); // Clear the reCAPTCHA instance on failure\r\n      });\r\n  };\r\n\r\n  // Step 2: Verify OTP\r\n  const verifyOtp = () => {\r\n    if (!verificationId) {\r\n      alert(\"Please request an OTP first.\");\r\n      return;\r\n    }\r\n\r\n    const credential = PhoneAuthProvider.credential(verificationId, otp);\r\n    signInWithCredential(auth, credential)\r\n      .then((result) => {\r\n        alert(\"Phone number verified and user signed in successfully!\");\r\n        // Additional actions upon successful sign-in\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error verifying OTP:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign Up with Phone Number</h2>\r\n      <input\r\n        type=\"tel\"\r\n        placeholder=\"Enter phone number in international format\"\r\n        value={phoneNumber}\r\n        onChange={(e) => setPhoneNumber(e.target.value)}\r\n      />\r\n      <button onClick={sendOtp}>Send OTP</button>\r\n      <div id=\"recaptcha-container\"></div>\r\n\r\n      {verificationId && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={verifyOtp}>Verify OTP</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponentLoginComponent;\r\n"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,iBAAiB,EAAEC,qBAAqB,EAAEC,iBAAiB,EAAEC,oBAAoB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElH,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACC,MAAM,CAACC,iBAAiB,EAAE;MAC7BD,MAAM,CAACC,iBAAiB,GAAG,IAAIlB,iBAAiB,CAC9C,qBAAqB,EACrB;QAAEmB,IAAI,EAAE;MAAY,CAAC;MAAE;MACvBpB,IACF,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMqB,OAAO,GAAGA,CAAA,KAAM;IACpBJ,cAAc,CAAC,CAAC,CAAC,CAAC;IAClB,MAAMK,WAAW,GAAGJ,MAAM,CAACC,iBAAiB;;IAE5C;IACA,IAAI,CAACR,WAAW,CAACY,UAAU,CAAC,GAAG,CAAC,EAAE;MAChCC,KAAK,CAAC,2EAA2E,CAAC;MAClF;IACF;IAEAtB,qBAAqB,CAACF,IAAI,EAAEW,WAAW,EAAEW,WAAW,CAAC,CAClDG,IAAI,CAAEC,kBAAkB,IAAK;MAC5BV,iBAAiB,CAACU,kBAAkB,CAACX,cAAc,CAAC;MACpDS,KAAK,CAAC,wBAAwB,CAAC;MAC/B;MACAN,MAAM,CAACC,iBAAiB,CAACQ,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CX,MAAM,CAACC,iBAAiB,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAAChB,cAAc,EAAE;MACnBS,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEA,MAAMQ,UAAU,GAAG7B,iBAAiB,CAAC6B,UAAU,CAACjB,cAAc,EAAEF,GAAG,CAAC;IACpET,oBAAoB,CAACJ,IAAI,EAAEgC,UAAU,CAAC,CACnCP,IAAI,CAAEQ,MAAM,IAAK;MAChBT,KAAK,CAAC,wDAAwD,CAAC;MAC/D;IACF,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAED,oBACEvB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClChC,OAAA;MACEiC,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,4CAA4C;MACxDC,KAAK,EAAE9B,WAAY;MACnB+B,QAAQ,EAAGC,CAAC,IAAK/B,cAAc,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFhC,OAAA;MAAQuC,OAAO,EAAExB,OAAQ;MAAAa,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3ChC,OAAA;MAAKwC,EAAE,EAAC;IAAqB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAEnCvB,cAAc,iBACbT,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACE5B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAE5B,GAAI;QACX6B,QAAQ,EAAGC,CAAC,IAAK7B,MAAM,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFhC,OAAA;QAAQuC,OAAO,EAAEd,SAAU;QAAAG,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC/C,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnFID,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAqFpB,eAAeuC,4BAA4B;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}