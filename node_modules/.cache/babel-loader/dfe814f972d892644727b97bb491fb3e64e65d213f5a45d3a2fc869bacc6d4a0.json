{"ast":null,"code":"var _jsxFileName = \"D:\\\\My_Tiffin_App\\\\theTiffinApp\\\\tiffin-wala\\\\src\\\\Pages\\\\Add_Tiffin_Center\\\\addTiffinCenter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './addTiffinCenter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTiffinCenter = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    ownerName: '',\n    contactNumber: '',\n    email: '',\n    address: '',\n    subscriptionType: '',\n    description: '',\n    deliveryAreas: [] // New field for selecting areas\n  });\n  const [areas, setAreas] = useState({\n    Area1: false,\n    Area2: false,\n    Area3: false,\n    Area4: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleAreaChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setAreas({\n      ...areas,\n      [name]: checked\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const selectedAreas = Object.keys(areas).filter(area => areas[area]);\n    const dataToSubmit = {\n      ...formData,\n      deliveryAreas: selectedAreas\n    };\n    console.log('Tiffin Center Data:', dataToSubmit);\n    // Call your register function here to save to Firebase or backend\n    // registerTiffinCenter(dataToSubmit, selectedAreas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTiffinCenter, \"8QqxGobxrsBJtTAz1yLwXCW9QrM=\");\n_c = AddTiffinCenter;\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: '#f0f0f0'\n  },\n  form: {\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '5px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n  },\n  inputContainer: {\n    marginBottom: '15px'\n  },\n  input: {\n    width: '100%',\n    padding: '8px',\n    marginTop: '5px',\n    borderRadius: '4px',\n    border: '1px solid #ccc'\n  },\n  button: {\n    width: '100%',\n    padding: '10px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  },\n  signupOption: {\n    marginTop: '15px',\n    textAlign: 'center'\n  },\n  signupLink: {\n    color: '#007bff',\n    textDecoration: 'none'\n  }\n};\nexport default AddTiffinCenter;\nvar _c;\n$RefreshReg$(_c, \"AddTiffinCenter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTiffinCenter","_s","formData","setFormData","name","ownerName","contactNumber","email","address","subscriptionType","description","deliveryAreas","areas","setAreas","Area1","Area2","Area3","Area4","handleChange","e","value","target","handleAreaChange","checked","handleSubmit","preventDefault","selectedAreas","Object","keys","filter","area","dataToSubmit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","styles","container","display","justifyContent","alignItems","height","backgroundColor","form","padding","borderRadius","boxShadow","inputContainer","marginBottom","input","width","marginTop","border","button","color","cursor","signupOption","textAlign","signupLink","textDecoration","$RefreshReg$"],"sources":["D:/My_Tiffin_App/theTiffinApp/tiffin-wala/src/Pages/Add_Tiffin_Center/addTiffinCenter.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './addTiffinCenter.css'\r\n\r\nconst AddTiffinCenter = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    ownerName: '',\r\n    contactNumber: '',\r\n    email: '',\r\n    address: '',\r\n    subscriptionType: '',\r\n    description: '',\r\n    deliveryAreas: [] // New field for selecting areas\r\n  });\r\n\r\n  const [areas, setAreas] = useState({\r\n    Area1: false,\r\n    Area2: false,\r\n    Area3: false,\r\n    Area4: false\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleAreaChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setAreas({ ...areas, [name]: checked });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const selectedAreas = Object.keys(areas).filter(area => areas[area]);\r\n    const dataToSubmit = { ...formData, deliveryAreas: selectedAreas };\r\n\r\n    console.log('Tiffin Center Data:', dataToSubmit);\r\n    // Call your register function here to save to Firebase or backend\r\n    // registerTiffinCenter(dataToSubmit, selectedAreas);\r\n  };\r\n\r\n  return (\r\n    <div> </div>\r\n  )\r\n\r\n\r\n};\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  form: {\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  inputContainer: {\r\n    marginBottom: '15px',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '8px',\r\n    marginTop: '5px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ccc',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  signupOption: {\r\n    marginTop: '15px',\r\n    textAlign: 'center',\r\n  },\r\n  signupLink: {\r\n    color: '#007bff',\r\n    textDecoration: 'none',\r\n  },\r\n};\r\n\r\nexport default AddTiffinCenter;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}