{"ast":null,"code":"var _jsxFileName = \"D:\\\\My_Tiffin_App\\\\theTiffinApp\\\\tiffin-wala\\\\src\\\\Components\\\\Login\\\\login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './login.css'\n\n// const LoginComponent = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     ownerName: '',\n//     contactNumber: '',\n//     email: '',\n//     address: '',\n//     subscriptionType: '',\n//     description: '',\n//     deliveryAreas: [] // New field for selecting areas\n//   });\n\n//   const [areas, setAreas] = useState({\n//     Area1: false,\n//     Area2: false,\n//     Area3: false,\n//     Area4: false\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleAreaChange = (e) => {\n//     const { name, checked } = e.target;\n//     setAreas({ ...areas, [name]: checked });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const selectedAreas = Object.keys(areas).filter(area => areas[area]);\n//     const dataToSubmit = { ...formData, deliveryAreas: selectedAreas };\n\n//     console.log('Tiffin Center Data:', dataToSubmit);\n//     // Call your register function here to save to Firebase or backend\n//     // registerTiffinCenter(dataToSubmit, selectedAreas);\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//     <form onSubmit={handleSubmit} style={styles.form}>\n//       <h2>Login</h2>\n//       <div style={styles.inputContainer}>\n//         <label htmlFor=\"userName\">User Name:</label>\n//         <input\n//           type=\"text\"\n//           id=\"userName\"\n//           name=\"userName\"\n//           value={formData.userName}\n//           onChange={handleChange}\n//           style={styles.input}\n//           required\n//         />\n//       </div>\n//       <div style={styles.inputContainer}>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           style={styles.input}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\" style={styles.button}>\n//         Login\n//       </button>\n//       <div style={styles.signupOption}>\n//         <p>Don't have an account?</p>\n//         <a href=\"/signup\" style={styles.signupLink}>\n//           Sign Up\n//         </a>\n//       </div>\n//     </form>\n//   </div>\n\n//   );\n\n// };\n// const styles = {\n//   container: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     height: '100vh',\n//     backgroundColor: '#f0f0f0',\n//   },\n//   form: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '5px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   inputContainer: {\n//     marginBottom: '15px',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '8px',\n//     marginTop: '5px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//   },\n//   button: {\n//     width: '100%',\n//     padding: '10px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//   },\n//   signupOption: {\n//     marginTop: '15px',\n//     textAlign: 'center',\n//   },\n//   signupLink: {\n//     color: '#007bff',\n//     textDecoration: 'none',\n//   },\n// };\n\n// export default LoginComponent;\n\nimport React, { useRef, useState } from 'react';\nimport { auth } from '../../firebase'; // Import the initialized `auth`\nimport { RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [otp, setOtp] = useState('');\n  const [confirmationResult, setConfirmationResult] = useState(null);\n  const [error, setError] = useState('');\n  const recaptcha = useRef(null);\n\n  // Set up reCAPTCHA\n  const setupRecaptcha = () => {\n    window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n      size: 'invisible',\n      callback: response => {\n        console.log('Recaptcha verified');\n      }\n    }, auth);\n  };\n  const sendOTP = async () => {\n    setupRecaptcha();\n    new fir();\n    const appVerifier = window.recaptchaVerifier;\n    try {\n      const confirmation = await signInWithPhoneNumber(auth, phone, appVerifier);\n      setConfirmationResult(confirmation);\n      console.log('OTP sent');\n    } catch (error) {\n      setError(error.message);\n      console.log('Error sending OTP:', error);\n    }\n  };\n  const verifyOTP = async () => {\n    try {\n      await confirmationResult.confirm(otp);\n      console.log('Phone number verified!');\n      setError('');\n    } catch (error) {\n      setError('Invalid OTP');\n      console.log('Error verifying OTP:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phone Number Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      placeholder: \"Enter phone number\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendOTP,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), confirmationResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOTP,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginComponent, \"BQaKZHFEFx91eTthDBOnC86qsZg=\");\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useRef","useState","auth","RecaptchaVerifier","signInWithPhoneNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginComponent","_s","phone","setPhone","otp","setOtp","confirmationResult","setConfirmationResult","error","setError","recaptcha","setupRecaptcha","window","recaptchaVerifier","size","callback","response","console","log","sendOTP","fir","appVerifier","confirmation","message","verifyOTP","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","id","style","color","_c","$RefreshReg$"],"sources":["D:/My_Tiffin_App/theTiffinApp/tiffin-wala/src/Components/Login/login.jsx"],"sourcesContent":["\r\n\r\n// import React, { useState } from 'react';\r\n// import './login.css'\r\n\r\n// const LoginComponent = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     ownerName: '',\r\n//     contactNumber: '',\r\n//     email: '',\r\n//     address: '',\r\n//     subscriptionType: '',\r\n//     description: '',\r\n//     deliveryAreas: [] // New field for selecting areas\r\n//   });\r\n\r\n//   const [areas, setAreas] = useState({\r\n//     Area1: false,\r\n//     Area2: false,\r\n//     Area3: false,\r\n//     Area4: false\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleAreaChange = (e) => {\r\n//     const { name, checked } = e.target;\r\n//     setAreas({ ...areas, [name]: checked });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const selectedAreas = Object.keys(areas).filter(area => areas[area]);\r\n//     const dataToSubmit = { ...formData, deliveryAreas: selectedAreas };\r\n\r\n//     console.log('Tiffin Center Data:', dataToSubmit);\r\n//     // Call your register function here to save to Firebase or backend\r\n//     // registerTiffinCenter(dataToSubmit, selectedAreas);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//     <form onSubmit={handleSubmit} style={styles.form}>\r\n//       <h2>Login</h2>\r\n//       <div style={styles.inputContainer}>\r\n//         <label htmlFor=\"userName\">User Name:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"userName\"\r\n//           name=\"userName\"\r\n//           value={formData.userName}\r\n//           onChange={handleChange}\r\n//           style={styles.input}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div style={styles.inputContainer}>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           style={styles.input}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <button type=\"submit\" style={styles.button}>\r\n//         Login\r\n//       </button>\r\n//       <div style={styles.signupOption}>\r\n//         <p>Don't have an account?</p>\r\n//         <a href=\"/signup\" style={styles.signupLink}>\r\n//           Sign Up\r\n//         </a>\r\n//       </div>\r\n//     </form>\r\n//   </div>\r\n  \r\n\r\n//   );\r\n\r\n\r\n// };\r\n// const styles = {\r\n//   container: {\r\n//     display: 'flex',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     height: '100vh',\r\n//     backgroundColor: '#f0f0f0',\r\n//   },\r\n//   form: {\r\n//     backgroundColor: '#fff',\r\n//     padding: '20px',\r\n//     borderRadius: '5px',\r\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n//   },\r\n//   inputContainer: {\r\n//     marginBottom: '15px',\r\n//   },\r\n//   input: {\r\n//     width: '100%',\r\n//     padding: '8px',\r\n//     marginTop: '5px',\r\n//     borderRadius: '4px',\r\n//     border: '1px solid #ccc',\r\n//   },\r\n//   button: {\r\n//     width: '100%',\r\n//     padding: '10px',\r\n//     backgroundColor: '#007bff',\r\n//     color: '#fff',\r\n//     border: 'none',\r\n//     borderRadius: '4px',\r\n//     cursor: 'pointer',\r\n//   },\r\n//   signupOption: {\r\n//     marginTop: '15px',\r\n//     textAlign: 'center',\r\n//   },\r\n//   signupLink: {\r\n//     color: '#007bff',\r\n//     textDecoration: 'none',\r\n//   },\r\n// };\r\n\r\n// export default LoginComponent;\r\n\r\nimport React, { useRef, useState } from 'react';\r\nimport { auth } from '../../firebase'; // Import the initialized `auth`\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\r\n\r\nconst LoginComponent = () => {\r\n  const [phone, setPhone] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [confirmationResult, setConfirmationResult] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const recaptcha = useRef(null)\r\n\r\n  // Set up reCAPTCHA\r\n  const setupRecaptcha = () => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(\r\n      'recaptcha-container',\r\n      {\r\n        size: 'invisible',\r\n        callback: (response) => {\r\n          console.log('Recaptcha verified');\r\n        },\r\n      },\r\n      auth\r\n    );\r\n  };\r\n\r\n  const sendOTP = async () => {\r\n    setupRecaptcha();\r\n     new fir\r\n    const appVerifier = window.recaptchaVerifier;\r\n    try {\r\n      const confirmation = await signInWithPhoneNumber(auth, phone, appVerifier);\r\n      setConfirmationResult(confirmation);\r\n      console.log('OTP sent');\r\n    } catch (error) {\r\n      setError(error.message);\r\n      console.log('Error sending OTP:', error);\r\n    }\r\n  };\r\n\r\n  const verifyOTP = async () => {\r\n    try {\r\n      await confirmationResult.confirm(otp);\r\n      console.log('Phone number verified!');\r\n      setError('');\r\n    } catch (error) {\r\n      setError('Invalid OTP');\r\n      console.log('Error verifying OTP:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phone Number Verification</h2>\r\n      <input\r\n        type=\"tel\"\r\n        placeholder=\"Enter phone number\"\r\n        value={phone}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n      />\r\n      <button onClick={sendOTP}>Send OTP</button>\r\n\r\n      <div id=\"recaptcha-container\"></div>\r\n\r\n      {confirmationResult && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={verifyOTP}>Verify OTP</button>\r\n        </>\r\n      )}\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponent ;\r\n"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,IAAI,QAAQ,gBAAgB,CAAC,CAAC;AACvC,SAASC,iBAAiB,EAAEC,qBAAqB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,SAAS,GAAGnB,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMoB,cAAc,GAAGA,CAAA,KAAM;IAC3BC,MAAM,CAACC,iBAAi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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}