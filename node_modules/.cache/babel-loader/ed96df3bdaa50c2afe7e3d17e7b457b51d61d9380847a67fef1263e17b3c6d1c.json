{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nconst AddTiffinCenter = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    ownerName: '',\n    contactNumber: '',\n    email: '',\n    address: '',\n    subscriptionType: '',\n    description: '',\n    deliveryAreas: [] // New field for selecting areas\n  });\n  const [areas, setAreas] = useState({\n    Area1: false,\n    Area2: false,\n    Area3: false,\n    Area4: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleAreaChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setAreas({\n      ...areas,\n      [name]: checked\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const selectedAreas = Object.keys(areas).filter(area => areas[area]);\n    const dataToSubmit = {\n      ...formData,\n      deliveryAreas: selectedAreas\n    };\n    console.log('Tiffin Center Data:', dataToSubmit);\n    // Call your register function here to save to Firebase or backend\n    // registerTiffinCenter(dataToSubmit, selectedAreas);\n  };\n\n  // Styles\n};\n_s(AddTiffinCenter, \"8QqxGobxrsBJtTAz1yLwXCW9QrM=\");\n_c = AddTiffinCenter;\nexport default AddTiffinCenter;\nconst formContainerStyle = {\n  maxWidth: '600px',\n  margin: '0 auto',\n  padding: '20px',\n  backgroundColor: '#f9f9f9',\n  borderRadius: '10px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n};\nconst formTitleStyle = {\n  textAlign: 'center',\n  color: '#333',\n  fontFamily: 'Arial, sans-serif',\n  marginBottom: '20px'\n};\nconst formStyle = {\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst inputGroupStyle = {\n  marginBottom: '15px'\n};\nconst labelStyle = {\n  fontSize: '14px',\n  fontWeight: 'bold',\n  color: '#555'\n};\nconst inputStyle = {\n  width: '100%',\n  padding: '10px',\n  fontSize: '14px',\n  borderRadius: '5px',\n  border: '1px solid #ccc',\n  marginTop: '5px'\n};\nconst textAreaStyle = {\n  width: '100%',\n  padding: '10px',\n  fontSize: '14px',\n  borderRadius: '5px',\n  border: '1px solid #ccc',\n  marginTop: '5px',\n  minHeight: '80px'\n};\nconst selectStyle = {\n  width: '100%',\n  padding: '10px',\n  fontSize: '14px',\n  borderRadius: '5px',\n  border: '1px solid #ccc',\n  marginTop: '5px'\n};\nconst checkboxGroupStyle = {\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst checkboxStyle = {\n  marginRight: '10px'\n};\nconst buttonContainerStyle = {\n  textAlign: 'center',\n  marginTop: '20px'\n};\nconst submitButtonStyle = {\n  backgroundColor: '#28a745',\n  color: '#fff',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: '16px',\n  transition: 'background-color 0.3s ease'\n};\nsubmitButtonStyle[':hover'] = {\n  backgroundColor: '#218838'\n};\nvar _c;\n$RefreshReg$(_c, \"AddTiffinCenter\");","map":{"version":3,"names":["React","useState","AddTiffinCenter","_s","formData","setFormData","name","ownerName","contactNumber","email","address","subscriptionType","description","deliveryAreas","areas","setAreas","Area1","Area2","Area3","Area4","handleChange","e","value","target","handleAreaChange","checked","handleSubmit","preventDefault","selectedAreas","Object","keys","filter","area","dataToSubmit","console","log","_c","formContainerStyle","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","formTitleStyle","textAlign","color","fontFamily","marginBottom","formStyle","display","flexDirection","inputGroupStyle","labelStyle","fontSize","fontWeight","inputStyle","width","border","marginTop","textAreaStyle","minHeight","selectStyle","checkboxGroupStyle","checkboxStyle","marginRight","buttonContainerStyle","submitButtonStyle","cursor","transition","$RefreshReg$"],"sources":["D:/My_Tiffin_App/theTiffinApp/tiffin-wala/src/Pages/Add_Tiffin_Center/addTiffinCenter.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst AddTiffinCenter = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    ownerName: '',\r\n    contactNumber: '',\r\n    email: '',\r\n    address: '',\r\n    subscriptionType: '',\r\n    description: '',\r\n    deliveryAreas: [] // New field for selecting areas\r\n  });\r\n\r\n  const [areas, setAreas] = useState({\r\n    Area1: false,\r\n    Area2: false,\r\n    Area3: false,\r\n    Area4: false\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleAreaChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setAreas({ ...areas, [name]: checked });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const selectedAreas = Object.keys(areas).filter(area => areas[area]);\r\n    const dataToSubmit = { ...formData, deliveryAreas: selectedAreas };\r\n\r\n    console.log('Tiffin Center Data:', dataToSubmit);\r\n    // Call your register function here to save to Firebase or backend\r\n    // registerTiffinCenter(dataToSubmit, selectedAreas);\r\n  };\r\n\r\n\r\n  \r\n  // Styles\r\n\r\n  \r\n};\r\n\r\nexport default AddTiffinCenter;\r\n\r\n\r\nconst formContainerStyle = {\r\n  maxWidth: '600px',\r\n  margin: '0 auto',\r\n  padding: '20px',\r\n  backgroundColor: '#f9f9f9',\r\n  borderRadius: '10px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n};\r\n\r\nconst formTitleStyle = {\r\n  textAlign: 'center',\r\n  color: '#333',\r\n  fontFamily: 'Arial, sans-serif',\r\n  marginBottom: '20px',\r\n};\r\n\r\nconst formStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n};\r\n\r\nconst inputGroupStyle = {\r\n  marginBottom: '15px',\r\n};\r\n\r\nconst labelStyle = {\r\n  fontSize: '14px',\r\n  fontWeight: 'bold',\r\n  color: '#555',\r\n};\r\n\r\nconst inputStyle = {\r\n  width: '100%',\r\n  padding: '10px',\r\n  fontSize: '14px',\r\n  borderRadius: '5px',\r\n  border: '1px solid #ccc',\r\n  marginTop: '5px',\r\n};\r\n\r\nconst textAreaStyle = {\r\n  width: '100%',\r\n  padding: '10px',\r\n  fontSize: '14px',\r\n  borderRadius: '5px',\r\n  border: '1px solid #ccc',\r\n  marginTop: '5px',\r\n  minHeight: '80px',\r\n};\r\n\r\nconst selectStyle = {\r\n  width: '100%',\r\n  padding: '10px',\r\n  fontSize: '14px',\r\n  borderRadius: '5px',\r\n  border: '1px solid #ccc',\r\n  marginTop: '5px',\r\n};\r\n\r\nconst checkboxGroupStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n};\r\n\r\nconst checkboxStyle = {\r\n  marginRight: '10px',\r\n};\r\n\r\nconst buttonContainerStyle = {\r\n  textAlign: 'center',\r\n  marginTop: '20px',\r\n};\r\n\r\nconst submitButtonStyle = {\r\n  backgroundColor: '#28a745',\r\n  color: '#fff',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  border: 'none',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  transition: 'background-color 0.3s ease',\r\n};\r\n\r\nsubmitButtonStyle[':hover'] = {\r\n  backgroundColor: '#218838',\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}