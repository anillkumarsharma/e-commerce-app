{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nconst AddTiffinCenter = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    ownerName: '',\n    contactNumber: '',\n    email: '',\n    address: '',\n    subscriptionType: '',\n    description: '',\n    deliveryAreas: [] // New field for selecting areas\n  });\n  const [areas, setAreas] = useState({\n    Area1: false,\n    Area2: false,\n    Area3: false,\n    Area4: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleAreaChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setAreas({\n      ...areas,\n      [name]: checked\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const selectedAreas = Object.keys(areas).filter(area => areas[area]);\n    const dataToSubmit = {\n      ...formData,\n      deliveryAreas: selectedAreas\n    };\n    console.log('Tiffin Center Data:', dataToSubmit);\n    // Call your register function here to save to Firebase or backend\n    // registerTiffinCenter(dataToSubmit, selectedAreas);\n  };\n\n  // Styles\n};\n_s(AddTiffinCenter, \"8QqxGobxrsBJtTAz1yLwXCW9QrM=\");\n_c = AddTiffinCenter;\nexport default AddTiffinCenter;\nsubmitButtonStyle[':hover'] = {\n  backgroundColor: '#218838'\n};\nvar _c;\n$RefreshReg$(_c, \"AddTiffinCenter\");","map":{"version":3,"names":["React","useState","AddTiffinCenter","_s","formData","setFormData","name","ownerName","contactNumber","email","address","subscriptionType","description","deliveryAreas","areas","setAreas","Area1","Area2","Area3","Area4","handleChange","e","value","target","handleAreaChange","checked","handleSubmit","preventDefault","selectedAreas","Object","keys","filter","area","dataToSubmit","console","log","_c","submitButtonStyle","backgroundColor","$RefreshReg$"],"sources":["D:/My_Tiffin_App/theTiffinApp/tiffin-wala/src/Pages/Add_Tiffin_Center/addTiffinCenter.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst AddTiffinCenter = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    ownerName: '',\r\n    contactNumber: '',\r\n    email: '',\r\n    address: '',\r\n    subscriptionType: '',\r\n    description: '',\r\n    deliveryAreas: [] // New field for selecting areas\r\n  });\r\n\r\n  const [areas, setAreas] = useState({\r\n    Area1: false,\r\n    Area2: false,\r\n    Area3: false,\r\n    Area4: false\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleAreaChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setAreas({ ...areas, [name]: checked });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const selectedAreas = Object.keys(areas).filter(area => areas[area]);\r\n    const dataToSubmit = { ...formData, deliveryAreas: selectedAreas };\r\n\r\n    console.log('Tiffin Center Data:', dataToSubmit);\r\n    // Call your register function here to save to Firebase or backend\r\n    // registerTiffinCenter(dataToSubmit, selectedAreas);\r\n  };\r\n\r\n\r\n  \r\n  // Styles\r\n\r\n  \r\n};\r\n\r\nexport default AddTiffinCenter;\r\n\r\n\r\n\r\n\r\nsubmitButtonStyle[':hover'] = {\r\n  backgroundColor: '#218838',\r\n};"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACvCK,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,gBAAgB,EAAE,EAAE;IACpBC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IACjCe,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEf,IAAI;MAAEgB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChClB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACE,IAAI,GAAGgB;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,gBAAgB,GAAIH,CAAC,IAAK;IAC9B,MAAM;MAAEf,IAAI;MAAEmB;IAAQ,CAAC,GAAGJ,CAAC,CAACE,MAAM;IAClCR,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAE,CAACR,IAAI,GAAGmB;IAAQ,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAChB,KAAK,CAAC,CAACiB,MAAM,CAACC,IAAI,IAAIlB,KAAK,CAACkB,IAAI,CAAC,CAAC;IACpE,MAAMC,YAAY,GAAG;MAAE,GAAG7B,QAAQ;MAAES,aAAa,EAAEe;IAAc,CAAC;IAElEM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,YAAY,CAAC;IAChD;IACA;EACF,CAAC;;EAID;AAGF,CAAC;AAAC9B,EAAA,CA5CID,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AA8CrB,eAAeA,eAAe;AAK9BmC,iBAAiB,CAAC,QAAQ,CAAC,GAAG;EAC5BC,eAAe,EAAE;AACnB,CAAC;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}