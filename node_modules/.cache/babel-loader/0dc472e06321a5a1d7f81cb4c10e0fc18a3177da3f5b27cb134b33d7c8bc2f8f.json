{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getUserdata } from '../Services/dbService';\nexport const fetchUserData = createAsyncThunk('form/fetchUserData', async () => {\n  const response = await getUserdata();\n  console.log(removeFormDat);\n  return response;\n});\nconst formSlice = createSlice({\n  name: 'form',\n  initialState: {\n    formData: []\n  },\n  reducers: {\n    addFormData: (state, action) => {\n      state.formData.push(action.payload);\n    },\n    removeFormData: (state, action) => {\n      state.formData = state.formData.filter((_, index) => index !== action.payload);\n    },\n    updateFormData: (state, action) => {\n      const {\n        index,\n        newData\n      } = action.payload;\n      if (index >= 0 && index < state.formData.length) {\n        state.formData[index] = newData;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUserData.fulfilled, (state, action) => {\n      state.formData = action.payload; // Initialize formData with fetched data\n    });\n  }\n});\nexport const {\n  addFormData,\n  removeFormData,\n  updateFormData\n} = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getUserdata","fetchUserData","response","console","log","removeFormDat","formSlice","name","initialState","formData","reducers","addFormData","state","action","push","payload","removeFormData","filter","_","index","updateFormData","newData","length","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["D:/My_Tiffin_App/theTiffinApp/tiffin-wala/src/Redux/formSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getUserdata } from '../Services/dbService';\r\n\r\nexport const fetchUserData = createAsyncThunk(\r\n  'form/fetchUserData',\r\n  async () => {\r\n    const response = await getUserdata();\r\n    console.log(removeFormDat)\r\n    return response; \r\n  }\r\n);\r\n\r\nconst formSlice = createSlice({ \r\n  name: 'form',\r\n  initialState: {\r\n    formData: [],\r\n  },\r\n  reducers: {\r\n    addFormData: (state, action) => {\r\n      state.formData.push(action.payload); \r\n    },\r\n    removeFormData: (state, action) => {\r\n      state.formData = state.formData.filter((_, index) => index !== action.payload);\r\n    },\r\n    updateFormData: (state, action) => {\r\n      const { index, newData } = action.payload;\r\n      if (index >= 0 && index < state.formData.length) {\r\n        state.formData[index] = newData;\r\n      }\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchUserData.fulfilled, (state, action) => {\r\n      state.formData = action.payload; // Initialize formData with fetched data\r\n    });\r\n  }\r\n});\r\n\r\nexport const { addFormData,removeFormData ,updateFormData } = formSlice.actions;\r\nexport default formSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,oBAAoB,EACpB,YAAY;EACV,MAAMI,QAAQ,GAAG,MAAMF,WAAW,CAAC,CAAC;EACpCG,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;EAC1B,OAAOH,QAAQ;AACjB,CACF,CAAC;AAED,MAAMI,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACH,QAAQ,CAACK,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACrC,CAAC;IACDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACQ,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKN,MAAM,CAACE,OAAO,CAAC;IAChF,CAAC;IACDK,cAAc,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEM,KAAK;QAAEE;MAAQ,CAAC,GAAGR,MAAM,CAACE,OAAO;MACzC,IAAII,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGP,KAAK,CAACH,QAAQ,CAACa,MAAM,EAAE;QAC/CV,KAAK,CAACH,QAAQ,CAACU,KAAK,CAAC,GAAGE,OAAO;MACjC;IACF;EACF,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACxB,aAAa,CAACyB,SAAS,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC1DD,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACE,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,WAAW;EAACK,cAAc;EAAEI;AAAe,CAAC,GAAGd,SAAS,CAACqB,OAAO;AAC/E,eAAerB,SAAS,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}